
name: BUILD

on:
  push:
  schedule:
    - cron:  '1 */8 * * *'

jobs:
  buildAUR:
    strategy:
      matrix:
        repos: [ marktext-bin, aria2-config-script, dingtalk-bin,  ocs-url, qqmusic-bin,  ttf-wps-fonts, mpv-full, wemeet-bin, yesplaymusic, zsh-theme-powerlevel10k-git, google-chrome,  visual-studio-code-bin, linux-clear]
        include:
          - repos: marktext-bin
            preinstall-pkgs: "at-spi2-core"
          - repos: qqmusic-bin
            preinstall-pkgs: "at-spi2-core"
          - repos: yesplaymusic
            preinstall-pkgs: "at-spi2-core"
          - repos: google-chrome
            preinstall-pkgs: "at-spi2-core"
          - repos: visual-studio-code-bin
            preinstall-pkgs: "at-spi2-core"
      fail-fast: false
      
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - uses: ./build-aur-action
      with:
        repo-name: ${{ matrix.repos }}
        preinstallPkgs: ${{ matrix.preinstall-pkgs }}
    
    - uses: actions/upload-artifact@v3
      with:
        path: ./*/*.pkg.tar.zst
        name: ${{ matrix.repos }}
        if-no-files-found: error
        
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        tag: "packages"
        artifacts: "./*/*.zst"
        token: ${{ secrets.GITHUB_TOKEN }}


  # buildNonAUR:
  #   strategy:
  #     matrix:
  #       PKGBUILDs: [Mathematica]

  #     fail-fast: false
      
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Build Non-AUR packages
  #       id: makepkg
  #       uses: ./build-nonaur-action
  #       with:
  #         pkgdir: ${{ matrix.PKGBUILDs }}
  #         aurDeps: true
          
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ./*/*.pkg.tar.zst
  #         name: ${{ matrix.PKGBUILDs }}
      
  #     - uses: ncipollo/release-action@v1
  #       with:
  #         allowUpdates: true
  #         tag: "packages"
  #         artifacts: ${{ steps.makepkg.outputs.pkgfile0 }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #     - run: ls -la ./*/*.zst
               
  # uploadToOneDrive:      
  #   runs-on: ubuntu-latest
  #   if: always()
  #   needs: [buildAUR, buildNonAUR]

  #   steps:
  #     - uses: actions/checkout@v3
      
  #     - uses: actions/download-artifact@v3
  #       id: download
      
  #     - uses: ./create-db-and-upload-action
  #       with:
  #         RCLONE_ONEDRIVE_CLIENT_ID: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_ID }}
  #         RCLONE_ONEDRIVE_CLIENT_SECRET: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_SECRET }}
  #         RCLONE_ONEDRIVE_REGION: global
  #         RCLONE_ONEDRIVE_TOKEN: ${{ secrets.RCLONE_ONEDRIVE_TOKEN }}
  #         RCLONE_ONEDRIVE_DRIVE_ID: ${{ secrets.RCLONE_ONEDRIVE_DRIVE_ID }}
  #         RCLONE_ONEDRIVE_DRIVE_TYPE: personal
  #         dest_path: /archrepo
  #         repo_name: vifly
  #         gpg-privatekey: ${{ secrets.gpg_private_key }}
  #         local_path: ${{ steps.download.outputs.download-path }}
